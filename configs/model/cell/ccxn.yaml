_target_: topobenchmarkx.models.network_module.NetworkModule

feature_encoder:
  _target_: topobenchmarkx.models.encoders.default_encoders.BaseFeatureEncoder
  in_channels: ${infer_in_channels:${dataset}} #${dataset.parameters.num_features}
  out_channels: 32

backbone:
  _target_: topomodelx.nn.cell.ccxn.CCXN
  in_channels_0: ${model.feature_encoder.out_channels}
  in_channels_1: ${model.feature_encoder.out_channels}
  in_channels_2: ${model.feature_encoder.out_channels}
  n_layers: 1
  att: True

backbone_additional_params:
  hidden_channels: ${model.feature_encoder.out_channels}

loss:
  _target_: topobenchmarkx.models.losses.loss.DefaultLoss
  task: ${dataset.parameters.task}
  loss_type: ${dataset.parameters.loss_type}

readout:
  _target_: topobenchmarkx.models.readouts.default_readouts.GNNBatchReadOut
  task_level: ${dataset.parameters.task_level}
  in_channels: ${model.backbone_additional_params.hidden_channels}
  out_channels: ${dataset.parameters.num_classes}

backbone_wrapper:
  _target_: topobenchmarkx.models.wrappers.default_wrapper.CCXNWrapper
  _partial_: true

optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  lr: 0.001
  weight_decay: 0.0

scheduler:
  _target_: torch.optim.lr_scheduler.StepLR
  _partial_: true
  step_size: 50
  gamma: 0.5

# compile model for faster training with pytorch 2.0
compile: false
