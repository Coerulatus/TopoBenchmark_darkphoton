_target_: topobenchmarkx.nn.TopologicalNetworkModule

model_name: alldeepset
model_domain: hypergraph

feature_encoder:
  _target_: topobenchmarkx.nn.encoders.${model.feature_encoder.encoder_name}
  encoder_name: AllCellFeatureEncoder
  in_channels: ${infer_in_channels:${dataset},${oc.select:transforms,null}}
  out_channels: 32
  proj_dropout: 0.0

backbone:
  _target_: topomodelx.nn.hypergraph.allset.AllSet
  in_channels: ${model.feature_encoder.out_channels}
  hidden_channels: ${model.feature_encoder.out_channels}
  n_layers: 1
  layer_dropout: 0.25
  mlp_num_layers: 2
  mlp_dropout: 0.0
  mlp_activation:
    _target_: torch.nn.ReLU
    _partial_: true
  mlp_norm:
    _target_: torch.nn.BatchNorm1d
    _partial_: true
    #num_features: ${model.backbone.hidden_channels}

backbone_wrapper:
  _target_: topobenchmarkx.nn.wrappers.HypergraphWrapper
  _partial_: true
  wrapper_name: HypergraphWrapper
  out_channels: ${model.feature_encoder.out_channels}
  num_cell_dimensions: ${infere_list_length:${model.feature_encoder.in_channels}}

readout:
  _target_: topobenchmarkx.nn.readouts.${model.readout.readout_name}
  readout_name: NoReadOut #  Use <NoReadOut> in case readout is not needed Options: PropagateSignalDown
  hidden_dim: None
  num_cell_dimensions: None

head_model:
  _target_: topobenchmarkx.nn.head_models.${model.head_model.head_model_name}
  head_model_name: ZeroCellModel
  in_channels: ${model.feature_encoder.out_channels}
  out_channels: ${dataset.parameters.num_classes}
  task_level: ${dataset.parameters.task_level}
  pooling_type: sum

# compile model for faster training with pytorch 2.0
compile: false
