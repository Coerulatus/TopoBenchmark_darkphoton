_target_: topobenchmarkx.models.network_module.NetworkModule

model_name: edgnn
model_domain: hypergraph

feature_encoder:
  _target_: topobenchmarkx.models.encoders.default_encoders.BaseNodeFeatureEncoder
  in_channels: ${dataset.parameters.num_features}
  out_channels: ${model.backbone.num_features}

backbone:
  _target_: custom_models.hypergraph.edgnn.EDGNN
  num_features: 64  # ${dataset.parameters.num_features}
  input_dropout: 0.2
  dropout: 0.2
  activation: relu
  MLP_num_layers: 0
  All_num_layers: 1
  edconv_type: EquivSet
  aggregate: 'add'

loss:
  _target_: topobenchmarkx.models.losses.loss.DefaultLoss
  task: ${dataset.parameters.task}
  loss_type: ${dataset.parameters.loss_type}


readout:
  _target_: topobenchmarkx.models.readouts.default_readouts.GNNBatchReadOut
  task_level: ${dataset.parameters.task_level}
  in_channels: ${model.backbone.num_features}
  out_channels: ${dataset.parameters.num_classes}

backbone_wrapper:
  _target_: topobenchmarkx.models.wrappers.default_wrapper.HypergraphWrapper
  _partial_: true

optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  lr: 0.01
  weight_decay: 0.0

scheduler:
  _target_: torch.optim.lr_scheduler.StepLR
  _partial_: true
  step_size: 50
  gamma: 0.5

# compile model for faster training with pytorch 2.0
compile: false
